h1. Git Commit Notifier

Sends email commit messages splitting commits that were pushed in one
step. Email is delivered as text or HTML with changes refined per
word. Emails have a scanable subject containing the first sentence of
the commit as well as the author, project and branch name.

A reply-to header is added containing the author of the commit. This makes follow up really simple.

For example:
<pre>[rails][master] Fix Brasilia timezone. [#1180 state:resolved] </pre>

If multiple commits are pushed at once, emails are numbered in chronological order:
<pre>
 [rails][master][000] Added deprecated warning messages to Float#months and Float#years deprications.
 [rails][master][001] Enhance testing for fractional days and weeks. Update changelog.
</pre>

Example email:

!http://img171.imageshack.us/img171/954/gitcommitnotifieremailpq3.png!

h1. Requirements

* Ruby and RubyGems
* SMTP server or sendmail compatible mailer

h1. Installing and Configuring

Install the gem:
  <pre>gem install git-commit-notifier</pre>

Link the script in as your post-receive hook:
  <pre>cd /path/to/your/repo.git/hooks
    ln -s `which git-commit-notifier` post-receive</pre>

Edit the configuration to suit you:
  * git config hooks.mailinglist  (email address of the recipient, probably your mailing list address)
  * git config hooks.emailprefix  (application name for subject line, defaults to repo name)
  * git config hooks.smtpserver   (optional hostname:port of your smtp server, default is localhost)
  * git config hooks.smtpuser     (username for external smtp)
  * git config hooks.smtppassword (password for external smtp)

h1. Contributions

Original by Csoma Zoltan (Primalgrasp), with a pretty thorough makeover by Andre Arko (indirect).

h1. License

MIT License, see the file LICENSE.
